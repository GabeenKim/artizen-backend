<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 
<mapper namespace="ns.sql.support.mapper">	

	<resultMap type="Support" id="supportSelectMap">
		 <id property= "supportId" column= "support_id"/>
		 <result property="price" column="price"/>
		 <result property="contentId" column="content_id"/>
		 <result property="userId" column="user_id"/>
	</resultMap>


	<resultMap type="Contents" id="contentSelectMap">
	    <id property="contentId" column="content_id"/>
	    <result property="contentName" column="content_name"/>
	    <result property="endDay" column="end_day"/>
	    <result property="contentSum" column="content_sum"/>      
	    <result property="target" column="target"/>      
		    <association property="support" javaType="support">
		        <id property= "supportId" column= "support_id"/>
		        <result property="userId" column="user_id"/>      
		    </association>
		    <association property= "image" javaType = "image">
		         <id property= "imageId" column =  "image_id"/>
		         <result property=  "imageUrl" column =" image_url"/>
		         <result property ="imageName" column =" image_name"/>
		     </association>
	</resultMap>
	
	<resultMap type="user" id="userWithPrice">
        <id column="user_id" property="userId"/>
        <result column="identity" property="identity"/>
        <result column="character" property="character"/>
        <result column="interests" property="interests"/>
        <association property="userInfo" javaType="userInfo">
            <id column="info_id" property="infoId"/>
            <result column="name" property="name"/>
            <result column="nickname" property="nickname"/>
            <result column="email" property="email"/>
            <result column="accounts" property="accounts"/>
            <result column="bank" property="bank"/>
            <result column="balance" property="balance"/>
        </association>
        <collection property="support" resultMap="supportWithUser"/>
    </resultMap>


    <resultMap type="Support" id="supportWithUser">
         <id property= "supportId" column= "support_id"/>
         <result property="price" column="price"/>
         <result property="contentId" column="content_id"/>
         <result property="userId" column="user_id"/>
    </resultMap>
	
	<!-- content에 있는 sum 보기 -->
	<resultMap type="Contents" id="supportWithContent">
		<id property="contentId" column="content_id"/>
		<result property="contentSum" column="content_sum"/>		
		<association property="support" javaType="support">
			<id property="supportId" column="support_id"/>		
		</association>
	</resultMap>
	

	<insert id="addFunding" parameterType="support">
		INSERT 
		INTO support(support_id, price, content_id, user_id )
		VALUES(support_seq.nextVal, #{price}, #{contentId}, #{userId})
	</insert>
	
	<delete id="deleteFunding" parameterType="list">
		DELETE 
		FROM support
		WHERE support_id=#{VALUE}
	</delete>
	
	<delete id="deleteFundingByContentId" parameterType="int">
		DELETE 
		FROM support
		WHERE content_id=#{VALUE}
	</delete>
	
	
	
	<select id="showFunding" parameterType="int" resultType="map">
			SELECT 
			    c.content_id, 
			    c.content_name,
			    c.end_day,
			    c.content_sum,
			    c.target,
			    s.support_id,
			    s.user_id,
			    i.image_id,
				i.image_url,
				i.image_name
			FROM (
				SELECT 
					image_id, 
					image_url, 
					image_name, 
					content_id,  
					ROW_NUMBER() OVER(PARTITION BY content_id ORDER BY image_id) as rn
				FROM image
					) i RIGHT JOIN contents c ON (i.content_id = c.content_id AND i.rn = 1)
			JOIN support s ON (c.content_id = s.content_id)  
			WHERE s.user_id=#{VALUE}
	</select>
	
	<select id="showFundingUser" parameterType="int" resultMap="supportSelectMap">
		SELECT support_id, price, content_id, user_id
		FROM support
		WHERE content_id=#{VALUE}
	</select>
	
	
 	 <select id="showSupportRank" resultMap="userWithPrice">
        select i.name, sum(j.price) as price
        from user_info i
        join(
        select u.user_id, s.price, u.info_id
        from users u join support s
        on(u.user_id = s.user_id)
        ) j
        on( i.info_id = j.info_id)
        group by i.name 
        order by price DESC
    </select> 
	
	<select id="showFundingDetail" resultMap="supportSelectMap" parameterType="int">
		SELECT price, content_id, user_id
		FROM support
		WHERE support_id = #{VALUE}
		
	</select>

</mapper>