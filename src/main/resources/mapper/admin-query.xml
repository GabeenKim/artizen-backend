<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sql.admin.mapper">
	
	<!-- 승인 전 프로젝트 리스트 불러오기 :: 완료, 후원 && 펀딩 포함 -->
	<select id="checkList" resultType="contents">
        select * from contents where is_accepted = 0
    </select> 
    
    <!-- 프로젝트 승인 :: 완료 -->
    <update id="ok" parameterType="int">
       UPDATE contents SET is_accepted = 1 WHERE content_id=#{VALUE}
    </update> 
    
    <!-- 프로젝트 거부 :: 완료 -->
	<update id="fail" parameterType="int">
       UPDATE contents SET is_accepted = -1 WHERE content_id=#{VALUE}
    </update>
	
	<!-- 수익률 분배 대상 프로젝트 가져오기 :: 완료 [1. 마감일이 현재 날짜 기준으로 넘겼고, 2. content_sum이 target값을 넘었을 때]-->
	<!-- 펀딩만 포함 -->
	<select id="okList" resultType="contents">
		<![CDATA[
			SELECT c.content_id, c.content_name, c.content_sum, c.target, c.start_day, c.end_day,
			f.funding_id, f.detail, f.transaction, f.production_cost, f.purpose, f.min_invest FROM contents c JOIN funding_contents f ON c.content_id = f.content_id   
			WHERE c.end_day < TO_CHAR(SYSDATE, 'YYYYMMDD') AND c.content_sum > c.target
			]]>
	</select>

	<!-- 환불 대상 프로젝트 가져오기 :: 완료 [1. 마감일이 현재 날짜 기준으로 넘겼고, 2. content_sum이 target값을 넘지 않았을 때]-->
	<!-- 펀딩만 포함 -->
	<select id="failList" resultType="contents">
		<![CDATA[
			SELECT c.content_id, c.content_name, c.content_sum, c.target, c.start_day, c.end_day,
			f.funding_id, f.detail, f.transaction, f.production_cost, f.purpose, f.min_invest FROM contents c JOIN funding_contents f ON c.content_id = f.content_id   
			WHERE c.end_day < TO_CHAR(SYSDATE, 'YYYYMMDD') AND c.content_sum < c.target
			]]>
	</select>
	
	<!-- 유저 목록 가져오기 -->
	<select id="userList" resultType="map">
		select a.user_id, a.info_id, b.name, b.email from users a JOIN user_info b ON a.info_id = b.info_id
	</select>
	
</mapper> 